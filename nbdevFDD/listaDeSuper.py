# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_ListaDeSupermercado.ipynb.

# %% auto 0
__all__ = ['listaDeSuper']

# %% ../nbs/02_ListaDeSupermercado.ipynb 3
class listaDeSuper:
    '''
    Clase que representa una lista de compras de supermercado.

    Attributes:
        articulos (List[Articulo]): Lista que contiene objetos de la clase Articulo, representando los artículos en la lista de compras.

    '''
    def __init__(self, articulos: List[Articulo] = None) -> None:
        '''
        Inicializa una nueva instancia de la lista de compras.

        Args:
            articulos (List[Articulo]): Lista de artículos de la lista de supermercado.

        '''
        self.articulos = articulos if articulos else []
        
    def Articulos(self) -> str:
        """
        Devuelve una representación en cadena de los artículos de la lista de compras.

        Returns:
            str: Cadena que representa los artículos de la lista de compras.

        """
        resp = ''
        for articulo in self.articulos:
            resp += str(articulo) + ', '
        return resp
    
    def articulosNoAgregado(self) -> str:
        """
        Devuelve una cadena que contiene los nombres de los artículos que no han sido agregados.

        Returns:
            str: Cadena que representa los nombres de los artículos no agregados.

        """
        noAgregados = ''
        for articulo in self.articulos:
            if not articulo.agregado:
                noAgregados += articulo.nombre + ', '
        return noAgregados
    
    def subirArticuloEnLista(self, nombre: str, precio: float, cantidad: int, agregado: bool = False) -> bool:
        '''
        Agrega un nuevo artículo a la lista de compras.

        Args:
            nombre (str): Nombre del artículo.
            precio (float): Precio del artículo.
            cantidad (int): Cantidad del artículo.
            agregado (bool): Indicador de si el artículo fue agregado.

        Returns:
            bool: True si el artículo se agregó correctamente, False si ya estaba en la lista.

        '''
        nuevo_articulo = Articulo(nombre=nombre, precio=precio, cantidad=cantidad, agregado=agregado)
        if nuevo_articulo not in self.articulos:
            self.articulos.append(nuevo_articulo)
            return True
        else:
            return False
    
    def agregarArticulo(self, nombre_articulo: str) -> bool:
        """
        Agrega un artículo a la lista de compras.

        Args:
            nombre_articulo (str): Nombre del artículo que se va a agregar.

        Returns:
            bool: True si el artículo se agregó correctamente, False si ya estaba agregado.

        """
        for articulo in self.articulos:
            if articulo.nombre == nombre_articulo:
                if not articulo.agregado:
                    articulo.agregado = True
                    return True
                else:
                    return False

        # Si el artículo no es encontrado en la lista
        return False

